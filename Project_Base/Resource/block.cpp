//============================================================================
// 
// ブロック [block.cpp]
// Author : 福田歩希
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "block.h"

// オブジェクト用
#include "rubble.h"

// 判定可視化用
#include "render_collision.h"

//============================================================================
// 
// publicメンバ
// 
//============================================================================

//============================================================================
// デフォルトコンストラクタ
//============================================================================
CBlock::CBlock() :
	CObject_X{ LAYER::MIDDLE }
{

}

//============================================================================
// デストラクタ
//============================================================================
CBlock::~CBlock()
{
#if 1
	for (int i = 0; i < 2; i++)
	{
		// ランダムな加速度を設定 ( ややY↑に偏った)
		D3DXVECTOR3 RandomVelocity{ CUtility::GetRandomValue<float>() * 0.01f, fabsf(CUtility::GetRandomValue<float>()) * 0.03f, -0.5f };

		// がれきを生成
		CRubble::Create(0,						// 通常
			GetPos() + RandomVelocity * 2.0f,	// 座標
			RandomVelocity * 0.5f);				// 加速度
	}
#endif
}

//============================================================================
// 初期設定
//============================================================================
HRESULT CBlock::Init()
{
	// 基底クラスの初期設定
	HRESULT hr = CObject_X::Init();

	if (FAILED(hr))
	{
		assert(false && "プレイヤークラスの初期設定に失敗");
	}

	return hr;
}

//============================================================================
// 終了処理
//============================================================================
void CBlock::Uninit()
{
	// 基底クラスの終了処理
	CObject_X::Uninit();
}

//============================================================================
// 更新処理
//============================================================================
void CBlock::Update()
{
	// 基底クラスの更新処理
	CObject_X::Update();
}

//============================================================================
// 描画処理
//============================================================================
void CBlock::Draw()
{
	// 基底クラスの描画処理
	CObject_X::Draw();
}

//============================================================================
// 生成
//============================================================================
CBlock* CBlock::Create()
{
	// インスタンスを生成
	CBlock* pNewInstance = DBG_NEW CBlock();

	// タイプを設定
	pNewInstance->SetType(TYPE::NONE);

	// 初期設定
	pNewInstance->Init();

	// モデルを設定
	pNewInstance->BindModel(CModel_X_Manager::TYPE::TEST);

	return pNewInstance;
}

//============================================================================
// 生成
//============================================================================
CBlock* CBlock::Create(const D3DXVECTOR3& Pos, const D3DXVECTOR3& Rot)
{
	// インスタンスを生成
	CBlock* pNewInstance = DBG_NEW CBlock();

	// タイプを設定
	pNewInstance->SetType(TYPE::BLOCK);

	// 初期設定
	pNewInstance->Init();

	// 座標を設定
	pNewInstance->SetPos(Pos);

	// 向きを設定
	pNewInstance->SetRot(Rot);

	// モデルを設定
	pNewInstance->BindModel(CModel_X_Manager::TYPE::TEST);

	// サイズを設定
	pNewInstance->SetSize(D3DXVECTOR3(10.0f, 10.0f, 10.0f));

	// 描画前に1度更新
	pNewInstance->Update();

	return pNewInstance;
}