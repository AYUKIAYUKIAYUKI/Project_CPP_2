//============================================================================
// 
// リザルト [result.cpp]
// Author : 福田歩希
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "result.h"
#include "manager.h"
#include "title.h"

//============================================================================
// 
// publicメンバ
// 
//============================================================================

//============================================================================
// 更新処理
//============================================================================
void CResult::Update()
{
	// 基底クラスの更新処理
	CScene::Update();

	// スプラインテストの更新処理
	m_pSpline->Update();

	// 次のシーンへ
	if (CManager::GetKeyboard()->GetTrigger(DIK_RETURN))
	{
		To_Next();
	}
}

//============================================================================
// 描画処理
//============================================================================
void CResult::Draw()
{
	// 基底クラスの描画処理
	CScene::Draw();

	// スプラインの描画処理
	m_pSpline->Draw();
}

//============================================================================
// 次のシーンへ
//============================================================================
void CResult::To_Next()
{
	// 全オブジェクトを解放
	CObject::ReleaseAll();

	// タイトルシーンへ変更
	CScene_Manager::ChangeScene(CTitle::Create());
}

//============================================================================
// リザルトを生成
//============================================================================
CResult* CResult::Create()
{
	// リザルトを生成
	CResult* pNew = DBG_NEW CResult();

	if (pNew == nullptr)
	{
		assert(false && "リザルトの生成に失敗");
	}

	// リザルトの初期設定
	if (FAILED(pNew->Init()))
	{
		assert(false && "リザルトの初期設定に失敗");
	}

	return pNew;
}

//============================================================================
// 
// protectedメンバ
// 
//============================================================================

//============================================================================
// コンストラクタ
//============================================================================
CResult::CResult() :
	m_pSpline{ nullptr }
{

}

//============================================================================
// デストラクタ
//============================================================================
CResult::~CResult()
{

}

//============================================================================
// 初期設定
//============================================================================
HRESULT CResult::Init()
{
	/* スプラインテストの初期設定 */
	m_pSpline = DBG_NEW CSpline_Test();
	m_pSpline->Init();

	return S_OK;
}

//============================================================================
// 終了処理
//============================================================================
void CResult::Uninit()
{
	/* スプラインテストの終了処理 */
	if (m_pSpline != nullptr)
	{
		m_pSpline->Uninit();
		delete m_pSpline;
		m_pSpline = nullptr;
	}
}