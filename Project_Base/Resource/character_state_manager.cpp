////============================================================================
////
//// キャラクターステートマネージャー [character_state_manager.h]
//// Author : 福田歩希
////
////============================================================================
//
////****************************************************
//// インクルードファイル
////****************************************************
//#include "character_state_manager.h"
//#include "character_state.h"
//#include "renderer.h"
//
//#include "player_state_damage.h"
//
////****************************************************
//// usingディレクティブ
////****************************************************
//using namespace abbr;
//
////============================================================================
//// 
//// publicメンバ
//// 
////============================================================================
//
////============================================================================
//// デフォルトコンストラクタ
////============================================================================
//CCharacter_State_Manager::CCharacter_State_Manager() :
//	m_pState{ nullptr }
//{
//
//}
//
////============================================================================
//// デストラクタ
////============================================================================
//CCharacter_State_Manager::~CCharacter_State_Manager()
//{
//
//}
//
////============================================================================
//// 破棄
////============================================================================
//void CCharacter_State_Manager::Release()
//{
//	if (this != nullptr)
//	{
//		// 終了処理
//		this->Uninit();
//
//		// メモリを解放
//		delete this;
//	}
//}
//
////============================================================================
//// 更新処理
////============================================================================
//void CCharacter_State_Manager::Update()
//{
//	// ステートの更新
//	m_pState->Update();
//
//	// ステートの変更確認
//	CheckChangeState();
//
//#if 1
//#ifdef _DEBUG
//
//	// ステートの中身がどの派生クラスか表示
//	CRenderer::SetDebugString("現在のキャラクターステート : 【" + static_cast<std::string>(typeid(*m_pState).name()) + "】");
//
//#endif	// _DEBUG
//#endif
//}
//
////============================================================================
//// ステートの変更確認
////============================================================================
//void CCharacter_State_Manager::CheckChangeState()
//{
//	// 変更予定のステートが存在しているならば
//	if (m_pState->GetNextState() != nullptr)
//	{
//		// 変更先のステートを取得しておき
//		CCharacter_State* NextState = m_pState->GetNextState();
//
//		/* 終了処理を呼び、現在のステートを破棄する */
//		//Uninit();
// 
//		// メモリを解放
//		delete m_pState;
//
//		// ポインタを初期化
//		m_pState = nullptr;
//
//		// ステートを入れ替える
//		m_pState = NextState;
//	}
//}
//
////============================================================================
//// ステート - ダメージ状態へ
////============================================================================
//void CCharacter_State_Manager::To_Damage()
//{
//	m_pState->To_Damage();
//}
//
////============================================================================
//// 現在のステートを取得
////============================================================================
//CCharacter_State* CCharacter_State_Manager::GetNowState()
//{
//	return m_pState;
//}
//
////============================================================================
//// 生成
////============================================================================
//CCharacter_State_Manager* CCharacter_State_Manager::Create(CCharacter_State* pState)
//{
//	// ステートマネージャーを生成
//	CCharacter_State_Manager* pNewInstance = DBG_NEW CCharacter_State_Manager();
//
//	if (pNewInstance == nullptr)
//	{ // 生成失敗
//		assert(false && "ステートマネージャーの生成に失敗");
//	}
//
//	// 初期設定
//	pNewInstance->Init(pState);
//
//	return pNewInstance;
//}
//
////============================================================================
//// 
//// privateメンバ
//// 
////============================================================================
//
////============================================================================
//// 初期設定
////============================================================================
//HRESULT CCharacter_State_Manager::Init(CCharacter_State* pState)
//{
//	// 初期状態を生成
//	if (m_pState == nullptr)
//	{
//		m_pState = pState;
//
//		return S_OK;
//	}
//
//	return E_FAIL;
//}
//
////============================================================================
//// 終了処理
////============================================================================
//void CCharacter_State_Manager::Uninit()
//{
//	if (m_pState != nullptr)
//	{
//		// メモリを解放
//		delete m_pState;
//
//		// ポインタを初期化
//		m_pState = nullptr;
//	}
//}