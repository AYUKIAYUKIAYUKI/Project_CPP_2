//============================================================================
//
// プレイヤーステート [player_state.cpp]
// Author : 福田歩希
//
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "player_state.h"
#include "renderer.h"

//****************************************************
// 静的メンバ変数の初期化
//****************************************************
int CPlayer_State::m_nCntDashCast = 0;	// ダッシュのキャストカウント
int CPlayer_State::m_nCntSlashCast = 0;	// 斬撃のキャストカウント

//============================================================================
// 
// publicメンバ
// 
//============================================================================

//============================================================================
// コンストラクタ
//============================================================================
CPlayer_State::CPlayer_State() :
	CCharacter_State{}
{
	// プレイヤーを取得
	m_pCharacter = RetrievePlayer();
}

//============================================================================
// プレイヤー取得コンストラクタ
//============================================================================
CPlayer_State::CPlayer_State(CPlayer* pPlayer) :
	CCharacter_State{}
{
	if (pPlayer == nullptr)
	{
		assert(false && "プレイヤーステートがプレイヤーを取得失敗");
	}
}

//============================================================================
// デストラクタ
//============================================================================
CPlayer_State::~CPlayer_State()
{
#if 0

	if (m_pNextState != nullptr)
	{
		// メモリを解放
		delete m_pNextState;

		//  ポインタを初期化
		m_pNextState = nullptr;
	}

#endif
}

//============================================================================
// 更新処理
//============================================================================
void CPlayer_State::Update()
{
	// ダッシュのキャストが溜まっていたらデクリメント
	if (m_nCntDashCast > 0)
		--m_nCntDashCast;

	// 斬撃のキャストが溜まっていたらデクリメント
	if (m_nCntSlashCast > 0)
		--m_nCntSlashCast;
}

//============================================================================
// 通常状態へ
//============================================================================
void CPlayer_State::To_Default()
{
	PrintError();
}

//============================================================================
// ダッシュ状態へ
//============================================================================
void CPlayer_State::To_Dash()
{
	PrintError();
}

//============================================================================
// ジャンプ状態へ
//============================================================================
void CPlayer_State::To_Jump()
{
	PrintError();
}

//============================================================================
// 壁ずり状態へ
//============================================================================
void CPlayer_State::To_Wall()
{
	PrintError();
}

//============================================================================
// 攻撃状態へ
//============================================================================
void CPlayer_State::To_Slash()
{
	PrintError();
}

//============================================================================
// ダメージ状態へ
//============================================================================
void CPlayer_State::To_Damage()
{
	PrintError();
}

//============================================================================
// 
// privateメンバ
// 
//============================================================================

//============================================================================
// エラー表示
//============================================================================
void CPlayer_State::PrintError()
{
#ifdef _DEBUG
#if 0
	assert(false && "想定しないステート変更が発生しました");
#else
	CRenderer::SetTimeString("想定しないステート変更が発生しました", 120);
#endif
#endif	// _DEBUG
}

//============================================================================
// プレイヤーを取得
//============================================================================
CPlayer* CPlayer_State::RetrievePlayer()
{
	// プレイヤーオブジェクトのポインタを格納
	CPlayer* pPlayer = nullptr;

	// プレイヤーを検索
	if (CObject::FindSpecificObject(CObject::TYPE::PLAYER) != nullptr)
	{
		pPlayer = utility::DownCast(pPlayer, CObject::FindSpecificObject(CObject::TYPE::PLAYER));
	}
	else
	{
		assert(false && "プレイヤーの検索結果がありませんでした");
	}

	return pPlayer;
}