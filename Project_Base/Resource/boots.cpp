//============================================================================
// 
// ブーツ [boots.cpp]
// Author : 福田歩希
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "boots.h"
#include "renderer.h"

// 取得効果用
#include "player.h"

//****************************************************
// usingディレクティブ
//****************************************************
using namespace abbr;

//============================================================================
// 
// publicメンバ
// 
//============================================================================

//============================================================================
// コンストラクタ
//============================================================================
CBoots::CBoots() :
	CItem{}
{

}

//============================================================================
// デストラクタ
//============================================================================
CBoots::~CBoots()
{

}

//============================================================================
// 初期設定
//============================================================================
HRESULT CBoots::Init()
{
	// アイテムクラスの初期設定
	if (FAILED(CItem::Init()))
	{
		return E_FAIL;
	}

	// 補間強度を設定
	SetCorrectCoef(0.1f);

	// モデルを設定
	BindModel(CX_Manager::TYPE::BOOTS);

	// 縮尺を設定
	SetScale(GetScale() * 4.0f);

	// 半径を設定
	SetRadius(5.0f);

	return S_OK;
}

//============================================================================
// 終了処理
//============================================================================
void CBoots::Uninit()
{
	// アイテムクラスの終了処理
	CItem::Uninit();
}

//============================================================================
// 更新処理
//============================================================================
void CBoots::Update()
{
	// アイテムクラスの更新処理
	CItem::Update();
}

//============================================================================
// 描画処理
//============================================================================
void CBoots::Draw()
{
	// アイテムクラスの描画処理
	CItem::Draw();
}

//============================================================================
// 生成
//============================================================================
CBoots* CBoots::Create()
{
	CBoots* pNewInstance = DBG_NEW CBoots();

	// 生成失敗
	if (pNewInstance == nullptr)
	{
		assert(false && "ブーツクラスの生成に失敗");
	}

	// タイプを設定
	pNewInstance->SetType(CObject::TYPE::ITEM);

	// 初期設定
	pNewInstance->Init();

	return pNewInstance;
}

//============================================================================
// 
// privateメンバ
// 
//============================================================================

//============================================================================
// 取得時の効果
//============================================================================
void CBoots::GainEffect()
{
	// プレイヤーを検索
	CObject* pFindPlayer = CObject::FindSpecificObject(CObject::TYPE::PLAYER);

	// プレイヤーを発見出来たら
	if (pFindPlayer)
	{
		// プレイヤークラスにダウンキャスト
		CPlayer* pPlayer = utility::DownCast<CPlayer, CObject>(pFindPlayer);

		// を有効化
		pPlayer->EnableBoots();

		// 取得時のテキストを表示
		DispGetText("Data\\JSON\\TEXTMESH\\text_getboots.json");
	}
}