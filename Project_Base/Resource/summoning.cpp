//============================================================================
// 
// 魔法陣 [summoning.cpp]
// Author : 福田歩希
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "summoning.h"

//****************************************************
// usingディレクティブ
//****************************************************
using namespace abbr;

//****************************************************
// 静的メンバ変数の初期化
//****************************************************

// モーションデータの展開
const JSON CSummoning::m_MotionData = utility::OpenJsonFile("Data\\JSON\\ENVIRONMENT\\SUMMONING\\summoning_motion.json");

//============================================================================
// 
// publicメンバ
// 
//============================================================================

//============================================================================
// コンストラクタ
//============================================================================
CSummoning::CSummoning(LAYER Layer) :
	CMotion_Set{ Layer }
{

}

//============================================================================
// デストラクタ
//============================================================================
CSummoning::~CSummoning()
{

}

//============================================================================
// 初期設定
//============================================================================
HRESULT CSummoning::Init()
{
	// モーションセットクラスの初期設定
	if (FAILED(CMotion_Set::Init()))
	{
		assert(false && "魔法陣クラスの初期設定に失敗");
	}

	// 出現モーションをセット
	SetNowMotion(2);

	return S_OK;
}

//============================================================================
// 終了処理
//============================================================================
void CSummoning::Uninit()
{
	// モーションセットクラスの終了処理
	CMotion_Set::Uninit();
}

//============================================================================
// 更新処理
//============================================================================
void CSummoning::Update()
{
	// 消滅判定
	if (Disappear())
		return;	// 消滅時は更新しない

	// 出現モーションが終了していたら
	if (GetStopState() && GetNowMotion() == 2)
	{
		// 通常モーションに変更
		SetNowMotion(0);
	}

	// モーションセットクラスの更新
	CMotion_Set::Update();
}

//============================================================================
// 描画処理
//============================================================================
void CSummoning::Draw()
{

}

//============================================================================
// 生成
//============================================================================
CSummoning* CSummoning::Create()
{
	// インスタンスを生成
	CSummoning* pNewInstance = DBG_NEW CSummoning(LAYER::DEFAULT);

	// タイプを設定
	pNewInstance->CObject::SetType(TYPE::NONE);

	// 初期設定
	pNewInstance->Init();

	// モーションをセット
	pNewInstance->CMotion_Set::SetMotion(LAYER::DEFAULT, m_MotionData);

	return pNewInstance;
}

//============================================================================
// 
// privateメンバ
// 
//============================================================================

//============================================================================
// 消滅
//============================================================================
bool CSummoning::Disappear()
{
	// 消滅モーションでなければ処理しない
	if (GetNowMotion() != 1)
		return false;

	// 消滅モーション再生が終了したら
	if (GetStopState())
	{
		// 破棄予約
		SetRelease();

		return true;
	}

	return false;
}