//============================================================================
//
// プレイヤーダメージステート [player_state_damage.cpp]
// Author : 福田歩希
//
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "player_state_damage.h"
#include "player_state_default.h"

#include "manager.h"
#include "sound.h"
#include "field_manager.h"

//****************************************************
// usingディレクティブ
//****************************************************
using namespace abbr;

//============================================================================
// 
// publicメンバ
// 
//============================================================================

//============================================================================
// コンストラクタ
//============================================================================
CPlayer_State_Damage::CPlayer_State_Damage() :
	CPlayer_State{}
{
	// ダメージモーションをセット
	m_pCharacter->SetNowMotion(10);

	// 被弾SEを鳴らす
	CSound::GetInstance()->Play(CSound::LABEL::DAMAGE);
}

//============================================================================
// デストラクタ
//============================================================================
CPlayer_State_Damage::~CPlayer_State_Damage()
{

}

//============================================================================
// 更新処理
//============================================================================
void CPlayer_State_Damage::Update()
{
	// プレイヤーステートクラスの更新処理
	CPlayer_State::Update();
	
	// 重力加速
	m_pCharacter->SetVelY(m_pCharacter->GetVelY() + CField_Manager::FIELD_GRAVITY);

	// カメラを取得
	CCamera* pCamera = CManager::GetManager()->GetCamera();

	// 振動を設定
	pCamera->SetVibration(0.003f);

	// ダメージモーションが終了したら
	if (m_pCharacter->GetStopState())
	{
		// 通常状態へ
		To_Default();
	}
}

//============================================================================
// 
// privateメンバ
// 
//============================================================================

//============================================================================
// 通常状態へ
//============================================================================
void CPlayer_State_Damage::To_Default()
{
	if (GetNextState() == nullptr)
	{
		SetNextState(DBG_NEW CPlayer_State_Default());
	}
}