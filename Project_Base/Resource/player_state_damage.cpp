//============================================================================
//
// プレイヤーダメージステート [player_state_damage.cpp]
// Author : 福田歩希
//
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "player_state_damage.h"
#include "player_state_default.h"

//****************************************************
// usingディレクティブ
//****************************************************
using namespace abbr;

//============================================================================
// 
// publicメンバ
// 
//============================================================================

//============================================================================
// コンストラクタ
//============================================================================
CPlayer_State_Damage::CPlayer_State_Damage() :
	CPlayer_State{},
	m_nDamageDuration{ 0 }
{

}

//============================================================================
// デストラクタ
//============================================================================
CPlayer_State_Damage::~CPlayer_State_Damage()
{

}

//============================================================================
// 更新処理
//============================================================================
void CPlayer_State_Damage::Update()
{
	// 継続期間をカウントアップ
	m_nDamageDuration++;

	// 点滅
	if (m_nDamageDuration % 2 == 0)
	{
		m_pCharacter->SetUseCol(true);
		m_pCharacter->SetCol({ 1.0f, 1.0f, 1.0f, 0.25f });
	}
	else
	{
		m_pCharacter->SetUseCol(false);
	}

	// 継続期間が最大に到達で
	if (m_nDamageDuration >= MAX_DASH_DURATION)
	{
		// 通常カラーに設定
		m_pCharacter->SetUseCol(false);

		// 通常状態へ
		To_Default();
	}
}

//============================================================================
// 
// privateメンバ
// 
//============================================================================

//============================================================================
// 通常状態へ
//============================================================================
void CPlayer_State_Damage::To_Default()
{
	if (GetNextState() == nullptr)
	{
		SetNextState(DBG_NEW CPlayer_State_Default());
	}
}