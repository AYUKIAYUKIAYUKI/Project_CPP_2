//============================================================================
//
// 球バウンディング [bouding_sphere.cpp]
// Author : 福田歩希
//
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "bounding_sphere.h"

//****************************************************
// usingディレクティブ
//****************************************************
using namespace abbr;

//============================================================================
//
// publicメンバ
//
//============================================================================

//============================================================================
// コンストラクタ
//============================================================================
CBounding_Sphere::CBounding_Sphere() :
	CBounding_Volume{},
	m_fRadius{ 0.0f },
	m_pRenderSphere{ nullptr }
{
	// 球表示の生成
	m_pRenderSphere = CRender_Sphere::Create();
}

//============================================================================
// デストラクタ
//============================================================================
CBounding_Sphere::~CBounding_Sphere()
{
	// 球表示を破棄予約
	if (m_pRenderSphere != nullptr)
	{
		m_pRenderSphere->SetRelease();
		m_pRenderSphere = nullptr;
	}
}

//============================================================================
// 中心点を設定
//============================================================================
void CBounding_Sphere::SetCenterPos(D3DXVECTOR3 Pos)
{
	// バウンディング基底クラスの持つ中心点にセット
	CBounding_Volume::SetCenterPos(Pos);

	// 球表示の持つシンクロ座標にセット
	m_pRenderSphere->SetCenterSyncPos(Pos);
}

//============================================================================
// 半径を取得
//============================================================================
const float& CBounding_Sphere::GetRadius() const
{
	return m_fRadius;
}

//============================================================================
// 半径を設定
//============================================================================
void CBounding_Sphere::SetRadius(float fRad)
{
	// 自身の半径にセット
	m_fRadius = fRad;

	// 判定表示の持つシンクロ半径にセット
	m_pRenderSphere->SetSyncRadius(fRad);
}